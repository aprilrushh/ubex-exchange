{"ast":null,"code":"var _jsxFileName = \"/Users/andylee/usdb-exchange1/src/components/OrderBook/OrderBook.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport './OrderBook.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderBook = ({\n  symbol,\n  currentPrice,\n  orders = []\n}) => {\n  _s();\n  const [grouping, setGrouping] = useState(1000);\n\n  // 그룹핑 옵션\n  const groupingOptions = [10, 100, 1000, 10000];\n\n  // 주문 데이터 처리 및 계산\n  const {\n    bidOrders,\n    askOrders,\n    depthScale\n  } = useMemo(() => {\n    // 실제 주문 데이터 또는 더미 데이터 사용\n    const orderData = !orders || !orders.length ? generateDummyOrders(currentPrice, symbol) : orders;\n\n    // 주문 데이터 그룹핑 및 정렬\n    const groupedBids = groupOrders(orderData.filter(order => order.type === 'bid'), true, grouping);\n    const groupedAsks = groupOrders(orderData.filter(order => order.type === 'ask'), false, grouping);\n\n    // 최대 20개만 표시\n    const limitedBids = groupedBids.slice(0, 20);\n    const limitedAsks = groupedAsks.slice(0, 20);\n\n    // 깊이 스케일 계산 (최대 주문량 기준)\n    const maxVolume = Math.max(...limitedBids.map(order => order.volume), ...limitedAsks.map(order => order.volume));\n    return {\n      bidOrders: limitedBids,\n      askOrders: limitedAsks,\n      depthScale: maxVolume > 0 ? 100 / maxVolume : 1\n    };\n  }, [orders, currentPrice, symbol, grouping]);\n\n  // 주문 그룹핑 함수\n  function groupOrders(orders, isBid, groupSize) {\n    const grouped = {};\n    orders.forEach(order => {\n      const groupPrice = Math.floor(order.price / groupSize) * groupSize;\n      if (!grouped[groupPrice]) {\n        grouped[groupPrice] = {\n          price: groupPrice,\n          volume: 0,\n          total: 0,\n          type: isBid ? 'bid' : 'ask'\n        };\n      }\n      grouped[groupPrice].volume += order.volume;\n      grouped[groupPrice].total += order.price * order.volume;\n    });\n    const result = Object.values(grouped);\n    result.forEach(item => {\n      if (item.volume > 0) {\n        item.avgPrice = item.total / item.volume;\n      } else {\n        item.avgPrice = item.price;\n      }\n    });\n    return result.sort((a, b) => isBid ? b.price - a.price : a.price - b.price);\n  }\n\n  // 더미 데이터 생성 함수\n  function generateDummyOrders(basePrice, coinSymbol) {\n    if (!basePrice) basePrice = 144000000;\n    if (!coinSymbol) coinSymbol = 'BTC';\n    const dummyOrders = [];\n    for (let i = 1; i <= 30; i++) {\n      const askPrice = basePrice + i * Math.random() * 100000;\n      const bidPrice = basePrice - i * Math.random() * 100000;\n      const volume = Math.random() * 5 + 0.1;\n      dummyOrders.push({\n        id: `ask-${i}`,\n        type: 'ask',\n        price: askPrice,\n        volume,\n        total: askPrice * volume,\n        symbol: coinSymbol\n      }, {\n        id: `bid-${i}`,\n        type: 'bid',\n        price: bidPrice,\n        volume,\n        total: bidPrice * volume,\n        symbol: coinSymbol\n      });\n    }\n    return dummyOrders;\n  }\n\n  // 가격 포맷팅\n  const formatPrice = price => {\n    return price.toLocaleString();\n  };\n\n  // 수량 포맷팅\n  const formatVolume = volume => {\n    if (volume >= 1000) {\n      return (volume / 1000).toFixed(2) + 'K';\n    }\n    return volume.toFixed(4);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-book\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-book-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"order-book-title\",\n        children: \"\\uD638\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouping-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"grouping-label\",\n          children: \"\\uB2E8\\uC704:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), groupingOptions.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `grouping-button ${grouping === option ? 'active' : ''}`,\n          onClick: () => setGrouping(option),\n          children: option.toLocaleString()\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ask-orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"price-header\",\n            children: \"\\uAC00\\uACA9(KRW)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"volume-header\",\n            children: [symbol ? symbol.split('/')[0] : 'BTC', \" \\uC218\\uB7C9\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-list\",\n          children: askOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-item ask\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"depth-bar\",\n              style: {\n                width: `${order.volume * depthScale}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-price price-down\",\n              children: formatPrice(order.price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-volume\",\n              children: formatVolume(order.volume)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, `ask-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-price-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"current-price\",\n          children: formatPrice(currentPrice)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bid-orders\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-list\",\n          children: bidOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-item bid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"depth-bar\",\n              style: {\n                width: `${order.volume * depthScale}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-price price-up\",\n              children: formatPrice(order.price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-volume\",\n              children: formatVolume(order.volume)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, `bid-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderBook, \"mGDpfSrWf0HkRf0lUqZdsFo43Zw=\");\n_c = OrderBook;\nexport default OrderBook;\nvar _c;\n$RefreshReg$(_c, \"OrderBook\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsxDEV","_jsxDEV","OrderBook","symbol","currentPrice","orders","_s","grouping","setGrouping","groupingOptions","bidOrders","askOrders","depthScale","orderData","length","generateDummyOrders","groupedBids","groupOrders","filter","order","type","groupedAsks","limitedBids","slice","limitedAsks","maxVolume","Math","max","map","volume","isBid","groupSize","grouped","forEach","groupPrice","floor","price","total","result","Object","values","item","avgPrice","sort","a","b","basePrice","coinSymbol","dummyOrders","i","askPrice","random","bidPrice","push","id","formatPrice","toLocaleString","formatVolume","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","option","onClick","split","index","style","width","_c","$RefreshReg$"],"sources":["/Users/andylee/usdb-exchange1/src/components/OrderBook/OrderBook.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport './OrderBook.css';\n\nconst OrderBook = ({ symbol, currentPrice, orders = [] }) => {\n  const [grouping, setGrouping] = useState(1000);\n  \n  // 그룹핑 옵션\n  const groupingOptions = [10, 100, 1000, 10000];\n\n  // 주문 데이터 처리 및 계산\n  const { bidOrders, askOrders, depthScale } = useMemo(() => {\n    // 실제 주문 데이터 또는 더미 데이터 사용\n    const orderData = (!orders || !orders.length) \n      ? generateDummyOrders(currentPrice, symbol)\n      : orders;\n\n    // 주문 데이터 그룹핑 및 정렬\n    const groupedBids = groupOrders(orderData.filter(order => order.type === 'bid'), true, grouping);\n    const groupedAsks = groupOrders(orderData.filter(order => order.type === 'ask'), false, grouping);\n    \n    // 최대 20개만 표시\n    const limitedBids = groupedBids.slice(0, 20);\n    const limitedAsks = groupedAsks.slice(0, 20);\n    \n    // 깊이 스케일 계산 (최대 주문량 기준)\n    const maxVolume = Math.max(\n      ...limitedBids.map(order => order.volume),\n      ...limitedAsks.map(order => order.volume)\n    );\n    \n    return {\n      bidOrders: limitedBids,\n      askOrders: limitedAsks,\n      depthScale: maxVolume > 0 ? 100 / maxVolume : 1\n    };\n  }, [orders, currentPrice, symbol, grouping]);\n\n  // 주문 그룹핑 함수\n  function groupOrders(orders, isBid, groupSize) {\n    const grouped = {};\n    \n    orders.forEach(order => {\n      const groupPrice = Math.floor(order.price / groupSize) * groupSize;\n      \n      if (!grouped[groupPrice]) {\n        grouped[groupPrice] = {\n          price: groupPrice,\n          volume: 0,\n          total: 0,\n          type: isBid ? 'bid' : 'ask'\n        };\n      }\n      \n      grouped[groupPrice].volume += order.volume;\n      grouped[groupPrice].total += order.price * order.volume;\n    });\n    \n    const result = Object.values(grouped);\n    \n    result.forEach(item => {\n      if (item.volume > 0) {\n        item.avgPrice = item.total / item.volume;\n      } else {\n        item.avgPrice = item.price;\n      }\n    });\n    \n    return result.sort((a, b) => \n      isBid ? b.price - a.price : a.price - b.price\n    );\n  }\n\n  // 더미 데이터 생성 함수\n  function generateDummyOrders(basePrice, coinSymbol) {\n    if (!basePrice) basePrice = 144000000;\n    if (!coinSymbol) coinSymbol = 'BTC';\n    \n    const dummyOrders = [];\n    \n    for (let i = 1; i <= 30; i++) {\n      const askPrice = basePrice + (i * Math.random() * 100000);\n      const bidPrice = basePrice - (i * Math.random() * 100000);\n      const volume = Math.random() * 5 + 0.1;\n      \n      dummyOrders.push(\n        {\n          id: `ask-${i}`,\n          type: 'ask',\n          price: askPrice,\n          volume,\n          total: askPrice * volume,\n          symbol: coinSymbol\n        },\n        {\n          id: `bid-${i}`,\n          type: 'bid',\n          price: bidPrice,\n          volume,\n          total: bidPrice * volume,\n          symbol: coinSymbol\n        }\n      );\n    }\n    \n    return dummyOrders;\n  }\n\n  // 가격 포맷팅\n  const formatPrice = (price) => {\n    return price.toLocaleString();\n  };\n  \n  // 수량 포맷팅\n  const formatVolume = (volume) => {\n    if (volume >= 1000) {\n      return (volume / 1000).toFixed(2) + 'K';\n    }\n    return volume.toFixed(4);\n  };\n\n  return (\n    <div className=\"order-book\">\n      <div className=\"order-book-header\">\n        <h3 className=\"order-book-title\">호가</h3>\n        \n        <div className=\"grouping-controls\">\n          <span className=\"grouping-label\">단위:</span>\n          {groupingOptions.map(option => (\n            <button\n              key={option}\n              className={`grouping-button ${grouping === option ? 'active' : ''}`}\n              onClick={() => setGrouping(option)}\n            >\n              {option.toLocaleString()}\n            </button>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"order-list-container\">\n        {/* 매도 목록 (역순) */}\n        <div className=\"ask-orders\">\n          <div className=\"order-header\">\n            <span className=\"price-header\">가격(KRW)</span>\n            <span className=\"volume-header\">{symbol ? symbol.split('/')[0] : 'BTC'} 수량</span>\n          </div>\n          \n          <div className=\"order-list\">\n            {askOrders.map((order, index) => (\n              <div key={`ask-${index}`} className=\"order-item ask\">\n                <div className=\"depth-bar\" style={{ width: `${order.volume * depthScale}%` }}></div>\n                <span className=\"order-price price-down\">{formatPrice(order.price)}</span>\n                <span className=\"order-volume\">{formatVolume(order.volume)}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        {/* 현재가 */}\n        <div className=\"current-price-info\">\n          <span className=\"current-price\">{formatPrice(currentPrice)}</span>\n        </div>\n        \n        {/* 매수 목록 */}\n        <div className=\"bid-orders\">\n          <div className=\"order-list\">\n            {bidOrders.map((order, index) => (\n              <div key={`bid-${index}`} className=\"order-item bid\">\n                <div className=\"depth-bar\" style={{ width: `${order.volume * depthScale}%` }}></div>\n                <span className=\"order-price price-up\">{formatPrice(order.price)}</span>\n                <span className=\"order-volume\">{formatVolume(order.volume)}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderBook;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}