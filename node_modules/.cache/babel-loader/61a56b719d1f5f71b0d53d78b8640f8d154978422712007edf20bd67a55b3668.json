{"ast":null,"code":"var _jsxFileName = \"/Users/andylee/usdb-exchange1/src/components/TradeHistory/TradeHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport './TradeHistory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradeHistory = ({\n  symbol,\n  tradeData = []\n}) => {\n  _s();\n  const [trades, setTrades] = useState([]);\n  const [filter, setFilter] = useState('all'); // 'all', 'buy', 'sell'\n\n  // 최초 마운트/데이터 변경 시 원본만 저장\n  useEffect(() => {\n    if (!tradeData || !tradeData.length) {\n      setTrades(generateDummyTrades());\n    } else {\n      setTrades(tradeData);\n    }\n  }, [tradeData, symbol]);\n\n  // 필터링/정렬은 useMemo로 계산\n  const filteredTrades = useMemo(() => {\n    let filtered = [...trades];\n    if (filter === 'buy') filtered = filtered.filter(trade => trade.side === 'buy');else if (filter === 'sell') filtered = filtered.filter(trade => trade.side === 'sell');\n    filtered.sort((a, b) => b.timestamp - a.timestamp);\n    return filtered.slice(0, 50);\n  }, [trades, filter]);\n\n  // 더미 데이터 생성 (실제 앱에서는 제거)\n  const generateDummyTrades = () => {\n    const basePrice = 144000000;\n    const dummyTrades = [];\n    const sides = ['buy', 'sell'];\n    const now = Date.now();\n    for (let i = 0; i < 100; i++) {\n      const priceDelta = Math.random() * 100000 - 50000;\n      const side = sides[Math.floor(Math.random() * sides.length)];\n      const price = basePrice + priceDelta;\n      dummyTrades.push({\n        id: `trade-${i}`,\n        price,\n        amount: Math.random() * 2,\n        side,\n        timestamp: now - i * 30000 - Math.floor(Math.random() * 30000),\n        symbol: symbol || 'BTC/KRW'\n      });\n    }\n    return dummyTrades;\n  };\n\n  // 가격 포맷팅\n  const formatPrice = price => {\n    return price.toLocaleString();\n  };\n\n  // 수량 포맷팅\n  const formatAmount = amount => {\n    return amount.toFixed(8);\n  };\n\n  // 시간 포맷팅\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n    return `${hours}:${minutes}:${seconds}`;\n  };\n\n  // 필터 변경 핸들러\n  const handleFilterChange = newFilter => {\n    setFilter(newFilter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trade-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-history-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"trade-history-title\",\n        children: \"\\uCCB4\\uACB0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `filter-button ${filter === 'all' ? 'active' : ''}`,\n          onClick: () => handleFilterChange('all'),\n          children: \"\\uC804\\uCCB4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `filter-button ${filter === 'buy' ? 'active' : ''}`,\n          onClick: () => handleFilterChange('buy'),\n          children: \"\\uB9E4\\uC218\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `filter-button ${filter === 'sell' ? 'active' : ''}`,\n          onClick: () => handleFilterChange('sell'),\n          children: \"\\uB9E4\\uB3C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trade-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-header\",\n          children: \"\\uC2DC\\uAC04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"price-header\",\n          children: \"\\uAC00\\uACA9(KRW)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"amount-header\",\n          children: [symbol ? symbol.split('/')[0] : 'BTC', \" \\uC218\\uB7C9\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trade-list\",\n        children: filteredTrades.length > 0 ? filteredTrades.map(trade => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `trade-item ${trade.side === 'buy' ? 'buy' : 'sell'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"trade-time\",\n            children: formatTime(trade.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `trade-price ${trade.side === 'buy' ? 'price-up' : 'price-down'}`,\n            children: formatPrice(trade.price)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"trade-amount\",\n            children: formatAmount(trade.amount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, trade.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-trades\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uCCB4\\uACB0\\uB41C \\uAC70\\uB798\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(TradeHistory, \"19v1t644BpuYrEb21oSKQKPG720=\");\n_c = TradeHistory;\nexport default TradeHistory;\nvar _c;\n$RefreshReg$(_c, \"TradeHistory\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsxDEV","_jsxDEV","TradeHistory","symbol","tradeData","_s","trades","setTrades","filter","setFilter","length","generateDummyTrades","filteredTrades","filtered","trade","side","sort","a","b","timestamp","slice","basePrice","dummyTrades","sides","now","Date","i","priceDelta","Math","random","floor","price","push","id","amount","formatPrice","toLocaleString","formatAmount","toFixed","formatTime","date","hours","getHours","toString","padStart","minutes","getMinutes","seconds","getSeconds","handleFilterChange","newFilter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","split","map","_c","$RefreshReg$"],"sources":["/Users/andylee/usdb-exchange1/src/components/TradeHistory/TradeHistory.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport './TradeHistory.css';\n\nconst TradeHistory = ({ symbol, tradeData = [] }) => {\n  const [trades, setTrades] = useState([]);\n  const [filter, setFilter] = useState('all');  // 'all', 'buy', 'sell'\n  \n  // 최초 마운트/데이터 변경 시 원본만 저장\n  useEffect(() => {\n    if (!tradeData || !tradeData.length) {\n      setTrades(generateDummyTrades());\n    } else {\n      setTrades(tradeData);\n    }\n  }, [tradeData, symbol]);\n  \n  // 필터링/정렬은 useMemo로 계산\n  const filteredTrades = useMemo(() => {\n    let filtered = [...trades];\n    if (filter === 'buy') filtered = filtered.filter(trade => trade.side === 'buy');\n    else if (filter === 'sell') filtered = filtered.filter(trade => trade.side === 'sell');\n    filtered.sort((a, b) => b.timestamp - a.timestamp);\n    return filtered.slice(0, 50);\n  }, [trades, filter]);\n  \n  // 더미 데이터 생성 (실제 앱에서는 제거)\n  const generateDummyTrades = () => {\n    const basePrice = 144000000;\n    const dummyTrades = [];\n    const sides = ['buy', 'sell'];\n    const now = Date.now();\n    \n    for (let i = 0; i < 100; i++) {\n      const priceDelta = Math.random() * 100000 - 50000;\n      const side = sides[Math.floor(Math.random() * sides.length)];\n      const price = basePrice + priceDelta;\n      \n      dummyTrades.push({\n        id: `trade-${i}`,\n        price,\n        amount: Math.random() * 2,\n        side,\n        timestamp: now - (i * 30000) - Math.floor(Math.random() * 30000),\n        symbol: symbol || 'BTC/KRW'\n      });\n    }\n    \n    return dummyTrades;\n  };\n  \n  // 가격 포맷팅\n  const formatPrice = (price) => {\n    return price.toLocaleString();\n  };\n  \n  // 수량 포맷팅\n  const formatAmount = (amount) => {\n    return amount.toFixed(8);\n  };\n  \n  // 시간 포맷팅\n  const formatTime = (timestamp) => {\n    const date = new Date(timestamp);\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n    return `${hours}:${minutes}:${seconds}`;\n  };\n  \n  // 필터 변경 핸들러\n  const handleFilterChange = (newFilter) => {\n    setFilter(newFilter);\n  };\n  \n  return (\n    <div className=\"trade-history\">\n      <div className=\"trade-history-header\">\n        <h3 className=\"trade-history-title\">체결</h3>\n        \n        <div className=\"filter-controls\">\n          <button \n            className={`filter-button ${filter === 'all' ? 'active' : ''}`}\n            onClick={() => handleFilterChange('all')}\n          >\n            전체\n          </button>\n          <button \n            className={`filter-button ${filter === 'buy' ? 'active' : ''}`}\n            onClick={() => handleFilterChange('buy')}\n          >\n            매수\n          </button>\n          <button \n            className={`filter-button ${filter === 'sell' ? 'active' : ''}`}\n            onClick={() => handleFilterChange('sell')}\n          >\n            매도\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"trade-list-container\">\n        <div className=\"trade-header\">\n          <span className=\"time-header\">시간</span>\n          <span className=\"price-header\">가격(KRW)</span>\n          <span className=\"amount-header\">{symbol ? symbol.split('/')[0] : 'BTC'} 수량</span>\n        </div>\n        \n        <div className=\"trade-list\">\n          {filteredTrades.length > 0 ? (\n            filteredTrades.map((trade) => (\n              <div \n                key={trade.id} \n                className={`trade-item ${trade.side === 'buy' ? 'buy' : 'sell'}`}\n              >\n                <span className=\"trade-time\">{formatTime(trade.timestamp)}</span>\n                <span className={`trade-price ${trade.side === 'buy' ? 'price-up' : 'price-down'}`}>\n                  {formatPrice(trade.price)}\n                </span>\n                <span className=\"trade-amount\">{formatAmount(trade.amount)}</span>\n              </div>\n            ))\n          ) : (\n            <div className=\"empty-trades\">\n              <p>체결된 거래가 없습니다.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TradeHistory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}