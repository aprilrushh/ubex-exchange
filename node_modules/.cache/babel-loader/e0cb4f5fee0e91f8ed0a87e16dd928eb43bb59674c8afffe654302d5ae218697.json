{"ast":null,"code":"var _jsxFileName = \"/Users/andylee/usdb-exchange1/src/components/OrderBook/OrderBook.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './OrderBook.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderBook = ({\n  symbol,\n  currentPrice,\n  orders = []\n}) => {\n  _s();\n  const [bidOrders, setBidOrders] = useState([]);\n  const [askOrders, setAskOrders] = useState([]);\n  const [depthScale, setDepthScale] = useState(1);\n  const [grouping, setGrouping] = useState(1000);\n\n  // 그룹핑 옵션\n  const groupingOptions = [10, 100, 1000, 10000];\n\n  // 주문 그룹핑 함수를 메모이제이션\n  const groupOrders = useCallback((orders, isBid) => {\n    const grouped = {};\n    orders.forEach(order => {\n      const groupPrice = Math.floor(order.price / grouping) * grouping;\n      if (!grouped[groupPrice]) {\n        grouped[groupPrice] = {\n          price: groupPrice,\n          volume: 0,\n          total: 0,\n          type: isBid ? 'bid' : 'ask'\n        };\n      }\n      grouped[groupPrice].volume += order.volume;\n      grouped[groupPrice].total += order.price * order.volume;\n    });\n    const result = Object.values(grouped);\n    result.forEach(item => {\n      if (item.volume > 0) {\n        item.avgPrice = item.total / item.volume;\n      } else {\n        item.avgPrice = item.price;\n      }\n    });\n    return result.sort((a, b) => isBid ? b.price - a.price : a.price - b.price);\n  }, [grouping]);\n\n  // 주문 데이터 처리 함수를 메모이제이션\n  const processOrderData = useCallback(orderData => {\n    const groupedBids = groupOrders(orderData.filter(order => order.type === 'bid'), true);\n    const groupedAsks = groupOrders(orderData.filter(order => order.type === 'ask'), false);\n    const limitedBids = groupedBids.slice(0, 20);\n    const limitedAsks = groupedAsks.slice(0, 20);\n    const maxVolume = Math.max(...limitedBids.map(order => order.volume), ...limitedAsks.map(order => order.volume));\n    setBidOrders(limitedBids);\n    setAskOrders(limitedAsks);\n    setDepthScale(maxVolume > 0 ? 100 / maxVolume : 1);\n  }, [groupOrders]);\n\n  // 더미 데이터 생성 함수를 메모이제이션\n  const generateDummyOrders = useCallback(basePrice => {\n    if (!basePrice) basePrice = 144000000;\n    const dummyOrders = [];\n    const coinSymbol = symbol ? symbol.split('/')[0] : 'BTC';\n    for (let i = 1; i <= 30; i++) {\n      const askPrice = basePrice + i * Math.random() * 100000;\n      const bidPrice = basePrice - i * Math.random() * 100000;\n      const volume = Math.random() * 5 + 0.1;\n      dummyOrders.push({\n        id: `ask-${i}`,\n        type: 'ask',\n        price: askPrice,\n        volume,\n        total: askPrice * volume,\n        symbol: coinSymbol\n      }, {\n        id: `bid-${i}`,\n        type: 'bid',\n        price: bidPrice,\n        volume,\n        total: bidPrice * volume,\n        symbol: coinSymbol\n      });\n    }\n    return dummyOrders;\n  }, [symbol]);\n\n  // 주문 데이터 처리 및 정렬\n  useEffect(() => {\n    const orderData = !orders || !orders.length ? generateDummyOrders(currentPrice) : orders;\n    processOrderData(orderData);\n  }, [orders, currentPrice, processOrderData, generateDummyOrders]);\n\n  // 그룹핑 변경 핸들러\n  const handleGroupingChange = useCallback(value => {\n    setGrouping(value);\n  }, []);\n\n  // 가격 포맷팅\n  const formatPrice = price => {\n    return price.toLocaleString();\n  };\n\n  // 수량 포맷팅\n  const formatVolume = volume => {\n    if (volume >= 1000) {\n      return (volume / 1000).toFixed(2) + 'K';\n    }\n    return volume.toFixed(4);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-book\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-book-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"order-book-title\",\n        children: \"\\uD638\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouping-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"grouping-label\",\n          children: \"\\uB2E8\\uC704:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), groupingOptions.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `grouping-button ${grouping === option ? 'active' : ''}`,\n          onClick: () => handleGroupingChange(option),\n          children: option.toLocaleString()\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ask-orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"price-header\",\n            children: \"\\uAC00\\uACA9(KRW)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"volume-header\",\n            children: [symbol ? symbol.split('/')[0] : 'BTC', \" \\uC218\\uB7C9\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-list\",\n          children: askOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-item ask\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"depth-bar\",\n              style: {\n                width: `${order.volume * depthScale}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-price price-down\",\n              children: formatPrice(order.price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-volume\",\n              children: formatVolume(order.volume)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, `ask-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-price-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"current-price\",\n          children: formatPrice(currentPrice)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bid-orders\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-list\",\n          children: bidOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-item bid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"depth-bar\",\n              style: {\n                width: `${order.volume * depthScale}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-price price-up\",\n              children: formatPrice(order.price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-volume\",\n              children: formatVolume(order.volume)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, `bid-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderBook, \"APfCohV3+dHzvYubB08M2ic8KmY=\");\n_c = OrderBook;\nexport default OrderBook;\nvar _c;\n$RefreshReg$(_c, \"OrderBook\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","OrderBook","symbol","currentPrice","orders","_s","bidOrders","setBidOrders","askOrders","setAskOrders","depthScale","setDepthScale","grouping","setGrouping","groupingOptions","groupOrders","isBid","grouped","forEach","order","groupPrice","Math","floor","price","volume","total","type","result","Object","values","item","avgPrice","sort","a","b","processOrderData","orderData","groupedBids","filter","groupedAsks","limitedBids","slice","limitedAsks","maxVolume","max","map","generateDummyOrders","basePrice","dummyOrders","coinSymbol","split","i","askPrice","random","bidPrice","push","id","length","handleGroupingChange","value","formatPrice","toLocaleString","formatVolume","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","option","onClick","index","style","width","_c","$RefreshReg$"],"sources":["/Users/andylee/usdb-exchange1/src/components/OrderBook/OrderBook.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './OrderBook.css';\n\nconst OrderBook = ({ symbol, currentPrice, orders = [] }) => {\n  const [bidOrders, setBidOrders] = useState([]);\n  const [askOrders, setAskOrders] = useState([]);\n  const [depthScale, setDepthScale] = useState(1);\n  const [grouping, setGrouping] = useState(1000);\n  \n  // 그룹핑 옵션\n  const groupingOptions = [10, 100, 1000, 10000];\n  \n  // 주문 그룹핑 함수를 메모이제이션\n  const groupOrders = useCallback((orders, isBid) => {\n    const grouped = {};\n    \n    orders.forEach(order => {\n      const groupPrice = Math.floor(order.price / grouping) * grouping;\n      \n      if (!grouped[groupPrice]) {\n        grouped[groupPrice] = {\n          price: groupPrice,\n          volume: 0,\n          total: 0,\n          type: isBid ? 'bid' : 'ask'\n        };\n      }\n      \n      grouped[groupPrice].volume += order.volume;\n      grouped[groupPrice].total += order.price * order.volume;\n    });\n    \n    const result = Object.values(grouped);\n    \n    result.forEach(item => {\n      if (item.volume > 0) {\n        item.avgPrice = item.total / item.volume;\n      } else {\n        item.avgPrice = item.price;\n      }\n    });\n    \n    return result.sort((a, b) => \n      isBid ? b.price - a.price : a.price - b.price\n    );\n  }, [grouping]);\n  \n  // 주문 데이터 처리 함수를 메모이제이션\n  const processOrderData = useCallback((orderData) => {\n    const groupedBids = groupOrders(orderData.filter(order => order.type === 'bid'), true);\n    const groupedAsks = groupOrders(orderData.filter(order => order.type === 'ask'), false);\n    \n    const limitedBids = groupedBids.slice(0, 20);\n    const limitedAsks = groupedAsks.slice(0, 20);\n    \n    const maxVolume = Math.max(\n      ...limitedBids.map(order => order.volume),\n      ...limitedAsks.map(order => order.volume)\n    );\n    \n    setBidOrders(limitedBids);\n    setAskOrders(limitedAsks);\n    setDepthScale(maxVolume > 0 ? 100 / maxVolume : 1);\n  }, [groupOrders]);\n  \n  // 더미 데이터 생성 함수를 메모이제이션\n  const generateDummyOrders = useCallback((basePrice) => {\n    if (!basePrice) basePrice = 144000000;\n    \n    const dummyOrders = [];\n    const coinSymbol = symbol ? symbol.split('/')[0] : 'BTC';\n    \n    for (let i = 1; i <= 30; i++) {\n      const askPrice = basePrice + (i * Math.random() * 100000);\n      const bidPrice = basePrice - (i * Math.random() * 100000);\n      const volume = Math.random() * 5 + 0.1;\n      \n      dummyOrders.push(\n        {\n          id: `ask-${i}`,\n          type: 'ask',\n          price: askPrice,\n          volume,\n          total: askPrice * volume,\n          symbol: coinSymbol\n        },\n        {\n          id: `bid-${i}`,\n          type: 'bid',\n          price: bidPrice,\n          volume,\n          total: bidPrice * volume,\n          symbol: coinSymbol\n        }\n      );\n    }\n    \n    return dummyOrders;\n  }, [symbol]);\n  \n  // 주문 데이터 처리 및 정렬\n  useEffect(() => {\n    const orderData = (!orders || !orders.length) \n      ? generateDummyOrders(currentPrice)\n      : orders;\n    \n    processOrderData(orderData);\n  }, [orders, currentPrice, processOrderData, generateDummyOrders]);\n  \n  // 그룹핑 변경 핸들러\n  const handleGroupingChange = useCallback((value) => {\n    setGrouping(value);\n  }, []);\n  \n  // 가격 포맷팅\n  const formatPrice = (price) => {\n    return price.toLocaleString();\n  };\n  \n  // 수량 포맷팅\n  const formatVolume = (volume) => {\n    if (volume >= 1000) {\n      return (volume / 1000).toFixed(2) + 'K';\n    }\n    return volume.toFixed(4);\n  };\n  \n  return (\n    <div className=\"order-book\">\n      <div className=\"order-book-header\">\n        <h3 className=\"order-book-title\">호가</h3>\n        \n        <div className=\"grouping-controls\">\n          <span className=\"grouping-label\">단위:</span>\n          {groupingOptions.map(option => (\n            <button\n              key={option}\n              className={`grouping-button ${grouping === option ? 'active' : ''}`}\n              onClick={() => handleGroupingChange(option)}\n            >\n              {option.toLocaleString()}\n            </button>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"order-list-container\">\n        {/* 매도 목록 (역순) */}\n        <div className=\"ask-orders\">\n          <div className=\"order-header\">\n            <span className=\"price-header\">가격(KRW)</span>\n            <span className=\"volume-header\">{symbol ? symbol.split('/')[0] : 'BTC'} 수량</span>\n          </div>\n          \n          <div className=\"order-list\">\n            {askOrders.map((order, index) => (\n              <div key={`ask-${index}`} className=\"order-item ask\">\n                <div className=\"depth-bar\" style={{ width: `${order.volume * depthScale}%` }}></div>\n                <span className=\"order-price price-down\">{formatPrice(order.price)}</span>\n                <span className=\"order-volume\">{formatVolume(order.volume)}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        {/* 현재가 */}\n        <div className=\"current-price-info\">\n          <span className=\"current-price\">{formatPrice(currentPrice)}</span>\n        </div>\n        \n        {/* 매수 목록 */}\n        <div className=\"bid-orders\">\n          <div className=\"order-list\">\n            {bidOrders.map((order, index) => (\n              <div key={`bid-${index}`} className=\"order-item bid\">\n                <div className=\"depth-bar\" style={{ width: `${order.volume * depthScale}%` }}></div>\n                <span className=\"order-price price-up\">{formatPrice(order.price)}</span>\n                <span className=\"order-volume\">{formatVolume(order.volume)}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderBook;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}