{"ast":null,"code":"var _jsxFileName = \"/Users/andylee/usdb-exchange1/src/components/OrderBook/OrderBook.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './OrderBook.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderBook = ({\n  symbol,\n  currentPrice,\n  orders = []\n}) => {\n  _s();\n  const [bidOrders, setBidOrders] = useState([]);\n  const [askOrders, setAskOrders] = useState([]);\n  const [depthScale, setDepthScale] = useState(1);\n  const [grouping, setGrouping] = useState(1000);\n\n  // 그룹핑 옵션\n  const groupingOptions = [10, 100, 1000, 10000];\n\n  // 주문 데이터 처리 및 정렬\n  useEffect(() => {\n    if (!orders || !orders.length) {\n      // 더미 데이터 생성 (실제 앱에서는 실제 데이터 사용)\n      const dummyData = generateDummyOrders(currentPrice);\n      processOrderData(dummyData);\n    } else {\n      processOrderData(orders);\n    }\n  }, [orders, currentPrice, grouping]);\n\n  // 주문 데이터 처리\n  const processOrderData = orderData => {\n    // 주문 데이터 그룹핑 및 정렬\n    const groupedBids = groupOrders(orderData.filter(order => order.type === 'bid'), true);\n    const groupedAsks = groupOrders(orderData.filter(order => order.type === 'ask'), false);\n\n    // 최대 20개만 표시\n    setBidOrders(groupedBids.slice(0, 20));\n    setAskOrders(groupedAsks.slice(0, 20));\n\n    // 깊이 스케일 계산 (최대 주문량 기준)\n    const maxVolume = Math.max(...groupedBids.map(order => order.volume), ...groupedAsks.map(order => order.volume));\n    setDepthScale(maxVolume > 0 ? 100 / maxVolume : 1);\n  };\n\n  // 주문 그룹핑\n  const groupOrders = (orders, isBid) => {\n    const grouped = {};\n    orders.forEach(order => {\n      // 가격 그룹핑\n      const groupPrice = Math.floor(order.price / grouping) * grouping;\n      if (!grouped[groupPrice]) {\n        grouped[groupPrice] = {\n          price: groupPrice,\n          volume: 0,\n          total: 0,\n          type: isBid ? 'bid' : 'ask'\n        };\n      }\n      grouped[groupPrice].volume += order.volume;\n      grouped[groupPrice].total += order.price * order.volume;\n    });\n\n    // 객체를 배열로 변환\n    const result = Object.values(grouped);\n\n    // 평균 가격 계산\n    result.forEach(item => {\n      if (item.volume > 0) {\n        item.avgPrice = item.total / item.volume;\n      } else {\n        item.avgPrice = item.price;\n      }\n    });\n\n    // 정렬 (매수: 내림차순, 매도: 오름차순)\n    return result.sort((a, b) => isBid ? b.price - a.price : a.price - b.price);\n  };\n\n  // 가격 포맷팅\n  const formatPrice = price => {\n    return price.toLocaleString();\n  };\n\n  // 수량 포맷팅\n  const formatVolume = volume => {\n    if (volume >= 1000) {\n      return (volume / 1000).toFixed(2) + 'K';\n    }\n    return volume.toFixed(4);\n  };\n\n  // 더미 데이터 생성 (실제 앱에서는 제거)\n  const generateDummyOrders = basePrice => {\n    if (!basePrice) basePrice = 144000000;\n    const dummyOrders = [];\n    const coinSymbol = symbol ? symbol.split('/')[0] : 'BTC';\n\n    // 매도 주문\n    for (let i = 1; i <= 30; i++) {\n      const price = basePrice + i * Math.random() * 100000;\n      const volume = Math.random() * 5 + 0.1;\n      dummyOrders.push({\n        id: `ask-${i}`,\n        type: 'ask',\n        price,\n        volume,\n        total: price * volume,\n        symbol: coinSymbol\n      });\n    }\n\n    // 매수 주문\n    for (let i = 1; i <= 30; i++) {\n      const price = basePrice - i * Math.random() * 100000;\n      const volume = Math.random() * 5 + 0.1;\n      dummyOrders.push({\n        id: `bid-${i}`,\n        type: 'bid',\n        price,\n        volume,\n        total: price * volume,\n        symbol: coinSymbol\n      });\n    }\n    return dummyOrders;\n  };\n\n  // 그룹핑 변경 핸들러\n  const handleGroupingChange = value => {\n    setGrouping(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-book\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-book-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"order-book-title\",\n        children: \"\\uD638\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouping-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"grouping-label\",\n          children: \"\\uB2E8\\uC704:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), groupingOptions.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `grouping-button ${grouping === option ? 'active' : ''}`,\n          onClick: () => handleGroupingChange(option),\n          children: option.toLocaleString()\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ask-orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"price-header\",\n            children: \"\\uAC00\\uACA9(KRW)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"volume-header\",\n            children: [symbol ? symbol.split('/')[0] : 'BTC', \" \\uC218\\uB7C9\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-list\",\n          children: askOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-item ask\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"depth-bar\",\n              style: {\n                width: `${order.volume * depthScale}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-price price-down\",\n              children: formatPrice(order.price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-volume\",\n              children: formatVolume(order.volume)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, `ask-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-price-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"current-price\",\n          children: formatPrice(currentPrice)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bid-orders\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-list\",\n          children: bidOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-item bid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"depth-bar\",\n              style: {\n                width: `${order.volume * depthScale}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-price price-up\",\n              children: formatPrice(order.price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"order-volume\",\n              children: formatVolume(order.volume)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, `bid-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderBook, \"url3qf7pabmdfMZblDyGRs/8aFE=\");\n_c = OrderBook;\nexport default OrderBook;\nvar _c;\n$RefreshReg$(_c, \"OrderBook\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OrderBook","symbol","currentPrice","orders","_s","bidOrders","setBidOrders","askOrders","setAskOrders","depthScale","setDepthScale","grouping","setGrouping","groupingOptions","length","dummyData","generateDummyOrders","processOrderData","orderData","groupedBids","groupOrders","filter","order","type","groupedAsks","slice","maxVolume","Math","max","map","volume","isBid","grouped","forEach","groupPrice","floor","price","total","result","Object","values","item","avgPrice","sort","a","b","formatPrice","toLocaleString","formatVolume","toFixed","basePrice","dummyOrders","coinSymbol","split","i","random","push","id","handleGroupingChange","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","option","onClick","index","style","width","_c","$RefreshReg$"],"sources":["/Users/andylee/usdb-exchange1/src/components/OrderBook/OrderBook.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './OrderBook.css';\n\nconst OrderBook = ({ symbol, currentPrice, orders = [] }) => {\n  const [bidOrders, setBidOrders] = useState([]);\n  const [askOrders, setAskOrders] = useState([]);\n  const [depthScale, setDepthScale] = useState(1);\n  const [grouping, setGrouping] = useState(1000);\n  \n  // 그룹핑 옵션\n  const groupingOptions = [10, 100, 1000, 10000];\n  \n  // 주문 데이터 처리 및 정렬\n  useEffect(() => {\n    if (!orders || !orders.length) {\n      // 더미 데이터 생성 (실제 앱에서는 실제 데이터 사용)\n      const dummyData = generateDummyOrders(currentPrice);\n      processOrderData(dummyData);\n    } else {\n      processOrderData(orders);\n    }\n  }, [orders, currentPrice, grouping]);\n  \n  // 주문 데이터 처리\n  const processOrderData = (orderData) => {\n    // 주문 데이터 그룹핑 및 정렬\n    const groupedBids = groupOrders(orderData.filter(order => order.type === 'bid'), true);\n    const groupedAsks = groupOrders(orderData.filter(order => order.type === 'ask'), false);\n    \n    // 최대 20개만 표시\n    setBidOrders(groupedBids.slice(0, 20));\n    setAskOrders(groupedAsks.slice(0, 20));\n    \n    // 깊이 스케일 계산 (최대 주문량 기준)\n    const maxVolume = Math.max(\n      ...groupedBids.map(order => order.volume),\n      ...groupedAsks.map(order => order.volume)\n    );\n    setDepthScale(maxVolume > 0 ? 100 / maxVolume : 1);\n  };\n  \n  // 주문 그룹핑\n  const groupOrders = (orders, isBid) => {\n    const grouped = {};\n    \n    orders.forEach(order => {\n      // 가격 그룹핑\n      const groupPrice = Math.floor(order.price / grouping) * grouping;\n      \n      if (!grouped[groupPrice]) {\n        grouped[groupPrice] = {\n          price: groupPrice,\n          volume: 0,\n          total: 0,\n          type: isBid ? 'bid' : 'ask'\n        };\n      }\n      \n      grouped[groupPrice].volume += order.volume;\n      grouped[groupPrice].total += order.price * order.volume;\n    });\n    \n    // 객체를 배열로 변환\n    const result = Object.values(grouped);\n    \n    // 평균 가격 계산\n    result.forEach(item => {\n      if (item.volume > 0) {\n        item.avgPrice = item.total / item.volume;\n      } else {\n        item.avgPrice = item.price;\n      }\n    });\n    \n    // 정렬 (매수: 내림차순, 매도: 오름차순)\n    return result.sort((a, b) => \n      isBid ? b.price - a.price : a.price - b.price\n    );\n  };\n  \n  // 가격 포맷팅\n  const formatPrice = (price) => {\n    return price.toLocaleString();\n  };\n  \n  // 수량 포맷팅\n  const formatVolume = (volume) => {\n    if (volume >= 1000) {\n      return (volume / 1000).toFixed(2) + 'K';\n    }\n    return volume.toFixed(4);\n  };\n  \n  // 더미 데이터 생성 (실제 앱에서는 제거)\n  const generateDummyOrders = (basePrice) => {\n    if (!basePrice) basePrice = 144000000;\n    \n    const dummyOrders = [];\n    const coinSymbol = symbol ? symbol.split('/')[0] : 'BTC';\n    \n    // 매도 주문\n    for (let i = 1; i <= 30; i++) {\n      const price = basePrice + (i * Math.random() * 100000);\n      const volume = Math.random() * 5 + 0.1;\n      \n      dummyOrders.push({\n        id: `ask-${i}`,\n        type: 'ask',\n        price,\n        volume,\n        total: price * volume,\n        symbol: coinSymbol\n      });\n    }\n    \n    // 매수 주문\n    for (let i = 1; i <= 30; i++) {\n      const price = basePrice - (i * Math.random() * 100000);\n      const volume = Math.random() * 5 + 0.1;\n      \n      dummyOrders.push({\n        id: `bid-${i}`,\n        type: 'bid',\n        price,\n        volume,\n        total: price * volume,\n        symbol: coinSymbol\n      });\n    }\n    \n    return dummyOrders;\n  };\n  \n  // 그룹핑 변경 핸들러\n  const handleGroupingChange = (value) => {\n    setGrouping(value);\n  };\n  \n  return (\n    <div className=\"order-book\">\n      <div className=\"order-book-header\">\n        <h3 className=\"order-book-title\">호가</h3>\n        \n        <div className=\"grouping-controls\">\n          <span className=\"grouping-label\">단위:</span>\n          {groupingOptions.map(option => (\n            <button\n              key={option}\n              className={`grouping-button ${grouping === option ? 'active' : ''}`}\n              onClick={() => handleGroupingChange(option)}\n            >\n              {option.toLocaleString()}\n            </button>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"order-list-container\">\n        {/* 매도 목록 (역순) */}\n        <div className=\"ask-orders\">\n          <div className=\"order-header\">\n            <span className=\"price-header\">가격(KRW)</span>\n            <span className=\"volume-header\">{symbol ? symbol.split('/')[0] : 'BTC'} 수량</span>\n          </div>\n          \n          <div className=\"order-list\">\n            {askOrders.map((order, index) => (\n              <div key={`ask-${index}`} className=\"order-item ask\">\n                <div className=\"depth-bar\" style={{ width: `${order.volume * depthScale}%` }}></div>\n                <span className=\"order-price price-down\">{formatPrice(order.price)}</span>\n                <span className=\"order-volume\">{formatVolume(order.volume)}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        {/* 현재가 */}\n        <div className=\"current-price-info\">\n          <span className=\"current-price\">{formatPrice(currentPrice)}</span>\n        </div>\n        \n        {/* 매수 목록 */}\n        <div className=\"bid-orders\">\n          <div className=\"order-list\">\n            {bidOrders.map((order, index) => (\n              <div key={`bid-${index}`} className=\"order-item bid\">\n                <div className=\"depth-bar\" style={{ width: `${order.volume * depthScale}%` }}></div>\n                <span className=\"order-price price-up\">{formatPrice(order.price)}</span>\n                <span className=\"order-volume\">{formatVolume(order.volume)}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderBook;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}